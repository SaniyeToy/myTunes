//
//  FavoriteListWorker.swift
//  myTunes
//
//  Created by MacOS on 26.03.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol FavoriteListWorkingLogic: AnyObject {
    func removeFavoriteList() 
    func removeFavorite(object: Tunes)
    func getFavoriteTunesList(completion: @escaping ((Result<[Tunes], Error>) -> Void))
}

final class FavoriteListWorker: FavoriteListWorkingLogic {
    
    func removeFavorite(object: Tunes) {
        let  managedContext = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
        managedContext.delete(object)
        do {
            try managedContext.save()
        } catch {
            print("error")
        }
    }

    func getFavoriteTunesList(completion: @escaping ((Result<[Tunes], Error>) -> Void)) {
        
        do {
            let managedContext = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
            var models = try managedContext.fetch(Tunes.fetchRequest())
            completion(.success(models))
        } catch {
            completion(.failure(error))
        }
    }
    
    func removeFavoriteList() {
        let request = NSFetchRequest<Tunes>(entityName: "Tunes")
        let managedContext = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
        do {
            if let items = try managedContext.fetch(request) as? [Tunes] {
                for item in items {
                    managedContext.delete(item)
                }
            }
        } catch {
            print("Error executing a fetch request: \(error)")
        }
        
        do {
            try managedContext.save()
            print("saved")
        } catch {
            print("error")
        }
    }
}


