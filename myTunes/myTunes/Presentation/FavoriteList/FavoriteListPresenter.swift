//
//  FavoriteListPresenter.swift
//  myTunes
//
//  Created by MacOS on 26.03.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import UIKit

protocol FavoriteListPresentationLogic: AnyObject {
    func snackBar(message: String)
    func presentFavoriteList(response: FavoriteList.Fetch.Response)
    func presentAlert(title: String , message: String)
    func presentAlertAction(title: String , message: String , action: UIAlertAction)
}

final class FavoriteListPresenter: FavoriteListPresentationLogic {
    
    weak var viewController: FavoriteListDisplayLogic?
    
    func presentFavoriteList(response: FavoriteList.Fetch.Response) {
        
        var favoriteList: [FavoriteList.Fetch.ViewModel.MyTunes] = []
        response.favoriteList.forEach {
            favoriteList.append(FavoriteList.Fetch.ViewModel.MyTunes(wrapperType: $0.wrapperType, kind: $0.kind, artistId: Int(truncatingIfNeeded: $0.artistId) , collectionId: Int(truncatingIfNeeded: $0.collectionId), trackId: Int(truncatingIfNeeded: $0.trackId), artistName: $0.artistName, collectionName: $0.collectionName, trackName: $0.trackName,artworkUrl100: $0.artworkUrl100, releaseDate: $0.releaseDate, country: $0.country, primaryGenreName: $0.primaryGenreName , artistViewUrl: $0.artistViewUrl, collectionViewUrl: $0.collectionViewUrl , trackViewUrl: $0.trackViewUrl ))
        }
        ///doldurduğumuz listeyi viewController a parametre olarak gönderiyoruz
        viewController?.displayFavoriteList(viewModel: FavoriteList.Fetch.ViewModel(favoriteList: favoriteList))
    }
    
    func presentAlert(title: String , message: String){
        Alert.alert(title: title , message: message)
    }
    
    func presentAlertAction(title: String , message: String , action: UIAlertAction) {
        Alert.alertAction(title: title, message: message, action: action)
    }
    
    func snackBar(message: String) {
        viewController?.snackBar(message: message)
        
    }
}
