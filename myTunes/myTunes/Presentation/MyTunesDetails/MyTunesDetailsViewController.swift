//
//  MyTunesDetailsViewController.swift
//  myTunes
//
//  Created by MacOS on 24.03.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MyTunesDetailsDisplayLogic: AnyObject
{
    func displayMyTunesDetails(viewModel: MyTunesDetails.Fetch.ViewModel)

}

final class MyTunesDetailsViewController: UIViewController, MyTunesDetailsDisplayLogic {
    var interactor: MyTunesDetailsBusinessLogic?
    var router: ( MyTunesDetailsRoutingLogic & MyTunesDetailsDataPassing)?
    var viewModel: MyTunesDetails.Fetch.ViewModel?
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: - Setup Clean Code Design Pattern 

    private func setup() {
        let viewController = self
        let interactor = MyTunesDetailsInteractor(worker: MyTunesDetailsWorker())
        let presenter = MyTunesDetailsPresenter()
        let router = MyTunesDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.fetchMyTunesDetails()
    }
    
}
    // MARK: - display view model from MyTunesDetailsPresenter
    extension MyTunesDetailsViewController{
    func displayMyTunesDetails(viewModel: MyTunesDetails.Fetch.ViewModel) {
        self.viewModel = viewModel
    }

}
